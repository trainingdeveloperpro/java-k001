spring.application.name=user-service

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/demo?useSSL=false
spring.datasource.username = root
spring.datasource.password = root


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#
#logging.level.com.zaxxer.hikari=debug
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.ddl-auto = update

#spring.cloud.kubernetes.reload.enabled=true
#spring.cloud.kubernetes.reload.strategy=restart_context
#spring.cloud.kubernetes.reload.mode=polling

#management.endpoint.health.enabled=true
#management.endpoint.info.enabled=true
#management.endpoint.restart.enabled=true
#ribbon.eureka.enabled=false
#ribbon.eager-load.enabled=true
#
#spring.cloud.gcp.sql.database-name=${DB_NAME}
#spring.cloud.gcp.sql.instance-connection-name=${CONNECT_NAME}
#spring.datasource.username=${DB_USER}
#spring.datasource.password=${DB_PASSWORD}
#spring.cloud.gcp.credentials.location=file:/secrets/cloudsql/credentials.json
#
## So app starts despite "table already exists" errors.
#spring.datasource.continue-on-error=true
#
## Enforces database initialization
#spring.datasource.initialization-mode=always
#
#logging.level.com.zaxxer.hikari=debug
#
##spring.jpa.database-platform=org.hibernate.dialect.MySQL55Dialect
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.ddl-auto = update
#
#### Hibernate Logging
#logging.level.org.hibernate.SQL= DEBUG
#
#spring.cloud.gcp.trace.enabled=true
#spring.sleuth.sampler.probability=1
#spring.sleuth.web.skipPattern=(^cleanup.*|.+favicon.*)
#
#spring.cache.type=redis
## 20 minutes cache is deleted
#spring.cache.redis.time-to-live=${REDIS_TIME_LIVE}
#spring.redis.host=${REDIS_IP}
#spring.redis.port=${REDIS_PORT}

